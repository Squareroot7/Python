#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


#PROVA 1 ORRENDA NO MODULARIZZAZIONE, FUNZIONA MA CHE CASINO
#POCO UTILE MA TENIAMOLO PER RICORDARE COME NON SI FA A SCRIVERE UN CODICE
'''
def main():
    n=int(input("Inserisci il numero massimo"))
    result=Fibonacci(n)
    print(result)

def Fibonacci(maxnum):
    oldervalue=0
    firstnumber=1
    secondnumber=0
    index=0
    fiboNumbers={}
    for index in range(maxnum+1):
        secondnumber=firstnumber+oldervalue
        oldervalue=firstnumber
        firstnumber=secondnumber
        print(secondnumber)
        fiboNumbers[index]=secondnumber
    return fiboNumbers

main()
'''

#FIBONACCI VERSIONE 2

def main():
    print("Welcome to Fibonacci's numbers analyzer")
    print("Let's find even Fibonacci's numbers")
    maxnum=int(input("Insert how many Fibonacci's numbers you desidere to analize "))
    for i in range(maxnum+1):
        if i!=0:    
            value=fib(i)
            if even(value)!=None:
                print(even(value))
    print("This is your list of even Fibonacci's numbers analyzing %d Fibonacci's numbers" % maxnum)

def even(value):
    if value%2 == 0:
        return value
    else:
        return print("This is not an odd number %d" %value)

def fib(num):
    if num==1:
        return 1
    a,b = 1,1 
    for i in range(num): 
        a,b = b, a+b 
    return a

main()
